@isTest
public class SprQuotesExtTest {

    public static testMethod void myUnitTest() {
    	PageReference sprPageRef=Page.SprPage;
    	Test.setCurrentPage(sprPageRef);
    	TAMS_Special_Pricing_Request__c spr=new TAMS_Special_Pricing_Request__c();
        Account acc = new Account(name='Test Account');
        acc.Territory_Name_TAMS__c = 'US.GL.2660100.TR-101';
        insert acc;

        Opportunity op1 = new Opportunity();
        op1.Name='testOpName1';
        op1.Expected_Bill_Date_TAMS__c = Date.today() + 2;
        op1.CloseDate =  Date.today()+1;
        op1.StageName = 'Closed/Lost';
        op1.Lost_Cancelled_Reason_TAMS__c = 'Functionality/Insufficient Technology';
        op1.Competitor_Lost_to_TAMS__c = 'GE';
        op1.LeadSource = 'Cold Call';
        op1.Incumbent_TAMS__c = 'GE';
        op1.Competitor_Lost_to_TAMS__c = 'GE';
        op1.Is_this_Product_Funded_TAMS__c = 'Yes';
        op1.Additional_Comments_TAMS__c = 'Test Comments';
        op1.Actual_Book_Date_TAMS__c = Date.today();
        insert op1;        

        Opportunity op2 = new Opportunity();
        op2.Name='testOpName2';
        op2.Expected_Bill_Date_TAMS__c = Date.today() + 2;
        op2.CloseDate =  Date.today()+1;
        op2.StageName = 'Closed/Lost';
        op2.Lost_Cancelled_Reason_TAMS__c = 'Functionality/Insufficient Technology';
        op2.Competitor_Lost_to_TAMS__c = 'GE';
        op2.LeadSource = 'Cold Call';
        op2.Incumbent_TAMS__c = 'GE';
        op2.Competitor_Lost_to_TAMS__c = 'GE';
        op2.Is_this_Product_Funded_TAMS__c = 'Yes';
        op2.Additional_Comments_TAMS__c = 'Test Comments';
        op2.Actual_Book_Date_TAMS__c = Date.today();
        insert op2;        

        TAMS_Quotes__c quote1 = new TAMS_Quotes__c();
        quote1.Opportunity_Name__c = op1.id;
        quote1.Customer_Name__c    = acc.id;
        quote1.Modality__c         = 'CT';
        quote1.PBOM__c             = 'AQ64/VELOCT/UPG.000';
        quote1.Quote_Name__c       = 'TriggerTestQuote1';
        quote1.Quote_Version__c    = '1';
        quote1.Status__c           = 'Quote Generated by HQ';
        quote1.Amount__c           = 4000;
        insert quote1;

        TAMS_Quotes__c quote2 = new TAMS_Quotes__c();
        quote2.Opportunity_Name__c = op2.id;
        quote2.Customer_Name__c    = acc.id;
        quote2.Modality__c         = 'MR';
        quote2.PBOM__c             = 'TITAN/X.000';
        quote2.Quote_Name__c       = 'TriggerTestQuote2';
        quote2.Quote_Version__c    = '1';
        quote2.Status__c           = 'Quote Generated by HQ';
        quote2.Amount__c           = 8000;
        insert quote2;        

    	
        ID quoteId = quote1.Id;
        System.debug('quoteId In TEST:'+quoteId);
        ApexPages.currentPage().getParameters().put('quoteId', quoteId);
    	ApexPages.StandardController stdCont = new ApexPages.StandardController(spr); 
    	SprQuotesExt extCont=new SprQuotesExt(stdCont);          
    	sprPageRef = extCont.saveSpr();
    	Test.setCurrentPage(sprPageRef);  	 
    	System.assert(spr != null);
    	System.debug('spr In TEST:'+spr);
    	ApexPages.currentPage().getParameters().remove('quoteId');
    	ApexPages.currentPage().getParameters().put('Id', spr.Id);
    	stdCont = new ApexPages.StandardController(spr); 
    	extCont=new SprQuotesExt(stdCont);

   		List<SprQuotesWrapper> sprQuotes=extCont.getsprQuotes();
    	System.debug('spr quotes size:'+sprQuotes.size());
    	System.assert(sprQuotes.size()==1);
    	for(SprQuotesWrapper sprQ:sprQuotes)
    	{
    		System.debug('IN TEST round1 sprQ:'+sprQ);
    		System.debug('IN TEST round1 sprQ.PRIMARY:'+sprQ.sprQuote.Primary__c);
    	}    	

    	extCont.saveSpr();
    	extCont.queryModality='';
    	extCont.querySID='';
    	//extCont.queryAccount = quote2.Customer_Name__r.name;
        extCont.queryAccount = '';
    	extCont.queryQuoteNumber='';
    	extCont.search();

    	List<TamsQuoteWrapper> searchQuotes=extCont.getQueriedQuotes();
    	System.debug('searchQuotes size:'+searchQuotes.size());
    	System.assert(searchQuotes.size() <> 0);
    	Boolean b1=extCont.hasNext;
    	Boolean b2=extCont.hasPrevious;
    	Integer i=extCont.pageNumber;
    	extCont.next();
    	extCont.previous();
    	extCont.last();
    	extCont.first();
    	Integer c=0;
    	for(TamsQuoteWrapper q:searchQuotes)
    	{
    		if(!(q.tamsQuote.id == sprQuotes[0].sprQuote.TAMS_Quote_SPR__c))
    		{
	    		q.selected=true;
	    		c=c+1;
    		}
	    	if(c==1)
	    		break;
    	}

    	extCont.addQuote();
    	SprQuotesWrapper tempSprQuote;
    	for(SprQuotesWrapper sprQ:sprQuotes)
    	{
    		System.debug('IN TEST sprQ:'+sprQ);
    		System.debug('IN TEST sprQ.PRIMARY:'+sprQ.sprQuote.Primary__c);
    		if(!sprQ.sprQuote.Primary__c)//Primary Flag not selected
    		{
    			System.debug('Non Primary quote found in TEST');
    			tempSprQuote=sprQ;		
    		}
    	}
    	System.debug('TEST: tempSprQuote.sprQuote:'+tempSprQuote.sprQuote.id);
		tempSprQuote.primarySelected=true;
    	extCont.switchPrimary();
    	System.debug('TEST: After switchPrimary.');
    	System.debug('TEST:tempSprQuote.sprQuote.Primary__c:'+tempSprQuote.sprQuote.Primary__c);
    	System.assert(tempSprQuote.sprQuote.Primary__c);    	
    	tempSprQuote.selected=true;
    	System.debug('BEFORE REMOVE TEST:sprQuotes.size():'+sprQuotes.size());
    	Test.setCurrentPage(extCont.removeQuote());
   		stdCont = new ApexPages.StandardController(spr); 
    	extCont=new SprQuotesExt(stdCont);
   		sprQuotes=extCont.getsprQuotes();    	
    	System.debug('AFTER REMOVE TEST:sprQuotes.size():'+sprQuotes.size());
    	System.assert(sprQuotes.size()==1);
    	extCont.save();
    }
}