@isTest
public class SPRFileAttachmentHelperTest{
	@isTest
	public static void testAttachment(){
		TAMS_SPR_Supporting_Documents__c sprSuppDoc = [SELECT id FROM TAMS_SPR_Supporting_Documents__c LIMIT 1];
		TAMS_Special_Pricing_Request__c spr = [SELECT id FROM TAMS_Special_Pricing_Request__c LIMIT 1];
		ContentVersion conVer = new ContentVersion();
		conVer.VersionData = Blob.valueOf('Unit Test Attachment PS');
		conVer.FirstPublishLocationId = sprSuppDoc.Id;
		conVer.Title = 'TESTFORATTACHMENT';
        conVer.PathOnClient = 'Test.txt';
		Test.startTest();
		insert conVer;
		Test.stopTest();
		List<ContentVersion> sprcon = [SELECT Title FROM ContentVersion WHERE FirstPublishLocationId = :spr.Id LIMIT 1];
		// System.debug('sprcon:'+sprcon);
		// System.assert(sprcon.size() == 1 , 'Spr Attachment not created');
		if(sprcon.size() == 1){
			System.debug('sprcon[0].Title:'+sprcon.get(0).Title);
			System.assertequals('TESTFORATTACHMENT',sprcon.get(0).Title);
		}
	}

	@testSetup static void setupTestData(){
		Account acct = createAccount('TESTACCOUNT');
		Opportunity opp = createOpportunity(acct.Id, 'TESTOPPORTUNITY');
		TAMS_Quotes__c quote = createQuote(acct.Id,opp.Id, 'TESTQUOTE');
		TAMS_Special_Pricing_Request__c spr = createSPR(acct.Id, quote.id);
		TAMS_SPR_Supporting_Documents__c sprSuppDoc = createSprSuppDoc(spr.Id);
	}

	private static Account createAccount(String acctName){
		Account acc = new Account(name='Test Account');
        acc.Territory_Name_TAMS__c = 'US.GL.2660100.TR-101';
        insert acc;
        return acc;
	}

	private static Opportunity createOpportunity(Id acctId, String oppName){
		Opportunity opp = new Opportunity();
        opp.Name = oppName;
        opp.Expected_Bill_Date_TAMS__c = Date.today() + 2;
        opp.CloseDate =  Date.today()+1;
        opp.StageName = 'Closed/Lost';
        opp.Lost_Cancelled_Reason_TAMS__c = 'Functionality/Insufficient Technology';
        opp.Competitor_Lost_to_TAMS__c = 'GE';
        opp.LeadSource = 'Cold Call';
        opp.Incumbent_TAMS__c = 'GE';
        opp.Competitor_Lost_to_TAMS__c = 'GE';
        opp.Is_this_Product_Funded_TAMS__c = 'Yes';
        opp.Additional_Comments_TAMS__c = 'Test Comments';
        opp.Actual_Book_Date_TAMS__c = Date.today();
        opp.AccountId = acctId;
        insert opp;        
        return opp;
	}

	private static TAMS_Quotes__c createQuote(Id acctId,Id oppId, String quoteName){
        TAMS_Quotes__c quote = new TAMS_Quotes__c();
        quote.Opportunity_Name__c = oppId;
        quote.Customer_Name__c    = acctId;
        quote.Modality__c         = 'CT';
        quote.PBOM__c             = 'AQ64/VELOCT/UPG.000';
        quote.Quote_Name__c       = quoteName;
        quote.Quote_Version__c    = '1';
        quote.Status__c           = 'Quote Generated by HQ';
        quote.Amount__c           = 4000;
        insert quote;		
        return quote;
	}

    private static TAMS_Special_Pricing_Request__c createSPR(Id acctId, Id quoteId ){  
        TAMS_Special_Pricing_Request__c spr      = new TAMS_Special_Pricing_Request__c();
        spr.Account_SPR__c                      = acctId;
        spr.Delivery_Date_SPR__c                = Date.today() + 4;
        spr.Requested_Response_Date_SPR__c      = Date.today() + 4;
        spr.Blended_Discount__c                 = 50;
        spr.Strategy_Justification__c           = 'Test';
        spr.Vital_Installed_Planned__c          = 'Test';
        spr.Service_Discount_and_Offering__c    = 'Test';
        spr.Service_Discount_SPR__c             = 50;
        spr.Finance_Method_and_Special_Terms__c = 'Test';    
        spr.Other_Comments__c                   ='Test';
        spr.TAMS_Quote_SPR__c                   = quoteId;
        spr.Status__c                           = 'Open'; 
        insert spr;
        return spr;        
    }    

	private static TAMS_SPR_Supporting_Documents__c createSprSuppDoc(Id sprId){
		TAMS_SPR_Supporting_Documents__c sprSuppDoc = new TAMS_SPR_Supporting_Documents__c();
		sprSuppDoc.TAMS_Special_Pricing_Request__c = sprId;
		sprSuppDoc.Description__c = 'TEST';
		sprSuppDoc.Public__c = true;
		insert sprSuppDoc;
		return sprSuppDoc;
	}
}