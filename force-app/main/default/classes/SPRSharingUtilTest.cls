@isTest
public without sharing class SPRSharingUtilTest {
	@isTest
	public static void testAEAssignment(){
		PageReference sprPageRef = Page.SprPage;
    	Test.setCurrentPage(sprPageRef);
    	TAMS_Special_Pricing_Request__c spr = new TAMS_Special_Pricing_Request__c();
    	TAMS_Quotes__c quote = [SELECT ID From TAMS_Quotes__c 
    							WHERE Quote_Name__c = 'TESTQUOTE' LIMIT 1];

    	ApexPages.currentPage().getParameters().put('quoteId', quote.Id);
    	ApexPages.StandardController stdCont = new ApexPages.StandardController(spr); 
    	SprQuotesExt extCont = new SprQuotesExt(stdCont);    
		User userAE1 = [SELECT id FROM User 
						WHERE LastName = 'USERAE1' LIMIT 1];
		System.runAs(userAE1){				    	
	    	Test.startTest();
	    	sprPageRef = extCont.saveSpr();
	    	Test.stopTest();
    	}
	}

	@isTest
	public static void testOppOwnerChange(){
		User userAE1 = [SELECT id FROM User 
						WHERE LastName = 'USERAE1' LIMIT 1];
		
    	PageReference sprPageRef = Page.SprPage;
    	Test.setCurrentPage(sprPageRef);
    	TAMS_Special_Pricing_Request__c spr = new TAMS_Special_Pricing_Request__c();
    	TAMS_Quotes__c quote = [SELECT ID From TAMS_Quotes__c 
    							WHERE Quote_Name__c = 'TESTQUOTE' LIMIT 1];

    	ApexPages.currentPage().getParameters().put('quoteId', quote.Id);
    	ApexPages.StandardController stdCont = new ApexPages.StandardController(spr); 
    	SprQuotesExt extCont = new SprQuotesExt(stdCont);    
    	sprPageRef = extCont.saveSpr();
    	Opportunity opp = [SELECT id From Opportunity LIMIT 1];
    	opp.OwnerId = userAE1.Id;
    	Test.startTest();
    	update opp;
    	Test.stopTest();
	}

	@testSetup static void setupTestData(){
		User userAE1 = createUser('USERAE1','System Administrator');
		User userAE2 = createUser('USERAE2','System Administrator');
		Account acct = createAccount('TESTACCOUNT');
		createTerritory('US.GL.2660100.TR-101','TESTTERR1');
		Opportunity opp = createOpportunity(acct.Id, 'TESTOPPORTUNITY');
		createQuote(acct.Id,opp.Id, 'TESTQUOTE');
	}

	private static Account createAccount(String acctName){
		Account acc = new Account(name='Test Account');
        acc.Territory_Name_TAMS__c = 'US.GL.2660100.TR-101';
        insert acc;
        return acc;
	}

	@future
	private static void createTerritory(String territoryName,String devName){
		Territory terr = new Territory();
		terr.DeveloperName = devName;
		terr.Description = territoryName;
		terr.Name = territoryName;
		insert terr;
		//UserTerritory ut = new UserTerritory();
		//ut.isActive = true;
		//ut.territoryId = terr.id;
		//ut.userId = userZbmId;
		//insert ut;		
	}

	private static User createUser(String userName, String profileName){
		Profile p = [Select Id From Profile where Name = :profileName];
        
        User u              = new User();
        u.LastName          = userName;
        u.Alias             = userName;
        u.Email             = userName+'@toshiba.com';
        u.Username          = userName+'@toshiba.com';
        u.CommunityNickname = userName;
        u.EmailEncodingKey  = 'UTF-8';
        u.LanguageLocaleKey = 'en_US';
        u.ProfileId         =  p.Id;
        u.TimeZoneSidKey    = 'America/Los_Angeles';
        u.LocaleSidKey      = 'en_US';
        u.dealer__c         = false;
        u.isActive          = true;
        insert u;
        return u;
	}

	private static Opportunity createOpportunity(Id acctId, String oppName){
		Opportunity opp = new Opportunity();
        opp.Name = oppName;
        opp.Expected_Bill_Date_TAMS__c = Date.today() + 2;
        opp.CloseDate =  Date.today()+1;
        opp.StageName = 'Closed/Lost';
        opp.Lost_Cancelled_Reason_TAMS__c = 'Functionality/Insufficient Technology';
        opp.Competitor_Lost_to_TAMS__c = 'GE';
        opp.LeadSource = 'Cold Call';
        opp.Incumbent_TAMS__c = 'GE';
        opp.Competitor_Lost_to_TAMS__c = 'GE';
        opp.Is_this_Product_Funded_TAMS__c = 'Yes';
        opp.Additional_Comments_TAMS__c = 'Test Comments';
        opp.Actual_Book_Date_TAMS__c = Date.today();
        opp.AccountId = acctId;
        insert opp;        
        return opp;
	}

	private static TAMS_Quotes__c createQuote(Id acctId,Id oppId, String quoteName){
        TAMS_Quotes__c quote = new TAMS_Quotes__c();
        quote.Opportunity_Name__c = oppId;
        quote.Customer_Name__c    = acctId;
        quote.Modality__c         = 'CT';
        quote.PBOM__c             = 'AQ64/VELOCT/UPG.000';
        quote.Quote_Name__c       = quoteName;
        quote.Quote_Version__c    = '1';
        quote.Status__c           = 'Quote Generated by HQ';
        quote.Amount__c           = 4000;
        insert quote;		
        return quote;
	}


}